if (isModel.toBoolean()) {//组件模式
    apply plugin: 'com.android.application'
} else {//集成模式
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        javaCompileOptions {//路由编译配置
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }

    sourceSets {
        main {
            if (isModel.toBoolean()) {//组件模式
                manifest.srcFile 'src/main/am/AndroidManifest.xml'
            } else {//集成模式
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //排除debug文件
                java {
                    exclude 'debug/**'
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:support-v4:28.0.0'
    annotationProcessor commonDependencies.arouter_compiler
    implementation project(':libcommon')
}
